<?php
 /**
 *
 * @author        Viha Digital Commerce Team <naeem@vdcstore.com>.
 * @copyright     Copyright(c) 2020 Viha Digital Commerce (https://www.vihadigitalcommerce.com/)
 * @link          https://www.vihadigitalcommerce.com/
 * @date          19/07/2021
 */

namespace Nvspromo\Orderlogin\Controller\Index;

class Zohologin extends \Magento\Framework\App\Action\Action
{

    protected $resultPageFactory;

    /**
     * Constructor
     *
     * @param \Magento\Framework\App\Action\Context  $context
     * @param \Magento\Framework\View\Result\PageFactory $resultPageFactory
     */
    public function __construct(
        \Magento\Framework\App\Action\Context $context,
        \Magento\Framework\View\Result\PageFactory $resultPageFactory
    ) {
        $this->resultPageFactory = $resultPageFactory;
        parent::__construct($context);
    }

    /**
     * Execute view action
     *
     * @return \Magento\Framework\Controller\ResultInterface
     */
    public function execute()
    {
        $objectManager = \Magento\Framework\App\ObjectManager::getInstance();;
        $customerSession = $objectManager->create('Magento\Customer\Model\Session');
        $resource = $objectManager->get('Magento\Framework\App\ResourceConnection'); 
        $connection = $resource->getConnection();
        $tableName = $resource->getTableName('zoho_token');
        $sql = "Select * FROM " . $tableName;
        $results = $connection->fetchAll($sql);
        $AccessTokenId = $results[0]['refresh_token_id'];
        $AccessToken = $results[0]['refresh_token'];
        $token_header =  json_decode($AccessToken, true);
        $pwd = $_REQUEST['sales_id'];
        $pwd = str_replace(' ', '+', $pwd);
        $pwd = preg_replace('/[^A-Za-z0-9+\-]/', '', $pwd);
        $r=array();
        $url_code_Invoices = "https://www.zohoapis.com/crm/v2/Invoices/search?page=1&per_page=20&criteria=((PO_Number:equals:".$pwd.")and(Order_Received:equals:true))";
        $url_code_sales = "https://www.zohoapis.com/crm/v2/Sales_Orders/search?page=1&per_page=20&criteria=((PO_Number:equals:".$pwd.")and(Order_Received:equals:true))";

        $result = $this->sendCurl($url_code_sales,$token_header);

        if(empty($result['data'])){
             $result = $this->sendCurl($url_code_Invoices,$token_header);   
        }
            $id = [];
            $subject = [];
            $status = [] ;
            $po_no = [];
            $account_name = [];
            $account_id = [];
            $created_date = [];
            foreach($result['data'] as $order){
                $id[]   = $order['id'] ;
                $subject[]  = $order['Subject'] ;
                $status[]   = $order['Status'] ;
                $po_no[]    = $order['PO_Number'] ;
                $created_date[] = $order['Created_Time'] ;
                $account_name[] = $order['Account_Name']['name'] ;
                $account_id[]   = $order['Account_Name']['id'] ; 
            }           
            if(count($po_no)>=1)
              {
                for($i=0; $i<=count($po_no); $i++)
                { 
                    $dt = new DateTime($created_date[$i]);
                    $date = $dt->format('Y-m-d');
                    $date1=strtotime($date);
                    $date2=strtotime("2014-08-21");                     
                    $callpo = $po_no[$i];
                    if($callpo ==$_REQUEST['sales_id'] && $date1>=$date2) {  
                        $count = count($id[$i]);
                        $account_valid=true; 
                        if($account_valid==true){
                            $customerSession->setAccountValid($account_valid);
                            $customerSession->setAccountName($account_name[$i]);
                            $customerSession->setPassWord($account_name[$i]);
                            $customerSession->setAccountId($account_id[$i]);
                            $r['success'] =1;
                        }
                    } 
                    else {
                        $r['success'] =0;
                        if(count($po_no)==$i+1) { 
                            die(json_encode($r));
                        } 
                    }
                    if($r['success'] ==1) {
                        die(json_encode($r));
                    }
                } 
                $i++;
            } else {
                 die(json_encode(0));
            }
    }
    public function sendCurl($url_code,$token_header){
        $curl = curl_init();
            curl_setopt_array($curl, array(
            CURLOPT_URL => $url_code,
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => $token_header,
        ));
        $response = curl_exec($curl);
        $err = curl_error($curl);
        curl_close($curl);
        $result = json_decode($response, true); 
        $jsonData = print_r($result,true);
        return $result;
    }
}